This file is part of MXE.
See index.html for further information.

Contains ad hoc patches for cross building.

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Wed, 1 Jun 2016 20:12:18 -0500
Subject: [PATCH] Fix typedef inclusion.


diff --git a/simgear/package/md5.h b/simgear/package/md5.h
index 1111111..2222222 100644
--- a/simgear/package/md5.h
+++ b/simgear/package/md5.h
@@ -15,11 +15,13 @@
 #ifndef _MD5_H_
 #define _MD5_H_
 
+#include <simgear/compiler.h>
+
 #ifdef __cplusplus
  extern "C" {
 #endif
      
-#if defined(_MSC_VER)
+#if defined(SG_WINDOWS)
 typedef unsigned char    u_int8_t;
 typedef unsigned int     u_int32_t;
 typedef unsigned __int64 u_int64_t;
@@ -49,4 +51,4 @@ void	 SG_MD5Transform(u_int32_t [4], const u_int8_t [MD5_BLOCK_LENGTH]);
 
      
 
- 
\ No newline at end of file
+ 

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Wed, 1 Jun 2016 20:20:36 -0500
Subject: [PATCH] Fix #include file name case.


diff --git a/simgear/misc/sg_path.cxx b/simgear/misc/sg_path.cxx
index 1111111..2222222 100644
--- a/simgear/misc/sg_path.cxx
+++ b/simgear/misc/sg_path.cxx
@@ -56,7 +56,7 @@ static const char sgSearchPathSep = ':';
 #endif
 
 #ifdef _WIN32
-#include <ShlObj.h>         // for CSIDL
+#include <shlobj.h>         // for CSIDL
 // TODO: replace this include file with the official <versionhelpers.h> header
 // included in the Windows 8.1 SDK
 #include "sgversionhelpers.hxx"

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Thu, 2 Jun 2016 07:49:22 -0500
Subject: [PATCH] Fix API difference in MinGW.


diff --git a/simgear/misc/sg_path.cxx b/simgear/misc/sg_path.cxx
index 1111111..2222222 100644
--- a/simgear/misc/sg_path.cxx
+++ b/simgear/misc/sg_path.cxx
@@ -99,7 +99,7 @@ static SGPath pathForKnownFolder(REFKNOWNFOLDERID folderId, const SGPath& def)
                 // copy into local memory
                 char path[MAX_PATH];
                 size_t len;
-                if (wcstombs_s(&len, path, localFolder, MAX_PATH) != S_OK) {
+                if (wcstombs_s(&len, path, MAX_PATH, localFolder, MAX_PATH) != S_OK) {
                     path[0] = '\0';
                     SG_LOG(SG_GENERAL, SG_WARN, "WCS to MBS failed");
                 }

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Thu, 2 Jun 2016 07:55:44 -0500
Subject: [PATCH] Set minimum required Windows version to Windows Vista.


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -340,7 +340,7 @@ endif()
 if(WIN32)
 
     if(MINGW)
-        add_definitions(-D_WIN32_WINNT=0x501)
+        add_definitions(-D_WIN32_WINNT=0x600)
     endif()
 
     if(MSVC)

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Thu, 2 Jun 2016 08:52:37 -0500
Subject: [PATCH] Fix ifdef.


diff --git a/simgear/io/http_repo_sync.cxx b/simgear/io/http_repo_sync.cxx
index 1111111..2222222 100644
--- a/simgear/io/http_repo_sync.cxx
+++ b/simgear/io/http_repo_sync.cxx
@@ -54,7 +54,7 @@ int main(int argc, char* argv[])
         cl.setProxy(proxyHost, proxyPort, proxyAuth);
     }
 
-#ifndef WIN32
+#ifndef _WIN32
     signal(SIGPIPE, SIG_IGN);
 #endif
 
diff --git a/simgear/io/httpget.cxx b/simgear/io/httpget.cxx
index 1111111..2222222 100644
--- a/simgear/io/httpget.cxx
+++ b/simgear/io/httpget.cxx
@@ -108,7 +108,7 @@ int main(int argc, char* argv[])
         cl.setProxy(proxyHost, proxyPort, proxyAuth);
     }
 
-#ifndef WIN32
+#ifndef _WIN32
     signal(SIGPIPE, SIG_IGN);
 #endif
 
diff --git a/simgear/timing/timestamp.cxx b/simgear/timing/timestamp.cxx
index 1111111..2222222 100644
--- a/simgear/timing/timestamp.cxx
+++ b/simgear/timing/timestamp.cxx
@@ -47,7 +47,7 @@
 #  include <time.h>
 #endif
 
-#ifdef WIN32
+#ifdef _WIN32
 #  include <windows.h>
 #  if defined( __CYGWIN__ ) || defined( __CYGWIN32__ )
 #    define NEAR /* */

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Thu, 2 Jun 2016 11:26:18 -0500
Subject: [PATCH] Don't use POSIX timers on win32.


diff --git a/simgear/timing/timestamp.cxx b/simgear/timing/timestamp.cxx
index 1111111..2222222 100644
--- a/simgear/timing/timestamp.cxx
+++ b/simgear/timing/timestamp.cxx
@@ -43,7 +43,7 @@
 #  include <sys/time.h>  // for get/setitimer, gettimeofday, struct timeval
 #endif
 
-#if defined(_POSIX_TIMERS) && (0 < _POSIX_TIMERS)
+#if defined(_POSIX_TIMERS) && (0 < _POSIX_TIMERS) && !defined(_WIN32)
 #  include <time.h>
 #endif
 
@@ -58,7 +58,7 @@
 
 #include "timestamp.hxx"
 
-#if defined(_POSIX_TIMERS) && (0 < _POSIX_TIMERS)
+#if defined(_POSIX_TIMERS) && (0 < _POSIX_TIMERS) && !defined(_WIN32)
 static clockid_t getClockId()
 {
 #if defined(_POSIX_MONOTONIC_CLOCK)
@@ -141,7 +141,7 @@ bool SGTimeStamp::sleepUntil(const SGTimeStamp& abstime)
 {
     // FreeBSD is missing clock_nanosleep, see
     // https://wiki.freebsd.org/FreeBSD_and_Standards
-#if defined(_POSIX_TIMERS) && (0 < _POSIX_TIMERS) && !defined(__FreeBSD__)
+#if defined(_POSIX_TIMERS) && (0 < _POSIX_TIMERS) && !defined(__FreeBSD__) && !defined(_WIN32)
     SGTimeStamp abstimeForSleep = abstime;
 
     // Always undersleep by resolution of the clock
@@ -237,7 +237,7 @@ bool SGTimeStamp::sleepUntil(const SGTimeStamp& abstime)
 bool SGTimeStamp::sleepFor(const SGTimeStamp& reltime)
 {
     // see comment above regarding FreeBSD
-#if defined(_POSIX_TIMERS) && (0 < _POSIX_TIMERS) && !defined(__FreeBSD__)
+#if defined(_POSIX_TIMERS) && (0 < _POSIX_TIMERS) && !defined(__FreeBSD__) && !defined(_WIN32)
     struct timespec ts;
     ts.tv_sec = reltime._sec;
     ts.tv_nsec = reltime._nsec;

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Thu, 2 Jun 2016 15:00:23 -0500
Subject: [PATCH] Use pkg-config instead of CMake to find curl and openal,
 since the CMake file doesn't work for static builds.


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -201,7 +201,12 @@ else()
     find_package(OpenGL REQUIRED)
 
     if (ENABLE_SOUND)
-        find_package(OpenAL REQUIRED)
+        if (MINGW)
+            include(FindPkgConfig)
+			pkg_check_modules(OPENAL REQUIRED openal)
+        else()
+            find_package(OpenAL REQUIRED)
+        endif(MINGW)
         message(STATUS "Sound support: ENABLED")
     endif(ENABLE_SOUND)
 
@@ -209,7 +214,13 @@ else()
 endif(SIMGEAR_HEADLESS)
 
 find_package(ZLIB REQUIRED)
-find_package(CURL REQUIRED)
+
+if (MINGW)
+	include(FindPkgConfig)
+	pkg_check_modules(CURL REQUIRED libcurl)
+else()
+	find_package(CURL REQUIRED)
+endif(MINGW)
 
 if (SYSTEM_EXPAT)
     message(STATUS "Requested to use system Expat library, forcing SIMGEAR_SHARED to true")
@@ -363,7 +374,7 @@ if(WIN32)
 endif(WIN32)
 
 set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${WARNING_FLAGS_C} ${MSVC_FLAGS}")
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WARNING_FLAGS_CXX} ${MSVC_FLAGS} ${BOOST_CXX_FLAGS}")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${WARNING_FLAGS_CXX} ${MSVC_FLAGS} ${BOOST_CXX_FLAGS} ${CURL_CFLAGS_OTHER} ${OPENAL_CFLAGS_OTHER}")
 set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${MSVC_LD_FLAGS}")
 
 # use BEFORE to ensure local directories are used first,
diff --git a/simgear/CMakeLists.txt b/simgear/CMakeLists.txt
index 1111111..2222222 100644
--- a/simgear/CMakeLists.txt
+++ b/simgear/CMakeLists.txt
@@ -134,13 +134,23 @@ target_link_libraries(SimGearCore
     ${CURL_LIBRARIES})
 
 if(NOT SIMGEAR_HEADLESS)
-    target_link_libraries(SimGearScene
-        SimGearCore
-        ${ZLIB_LIBRARY}
-        ${OPENSCENEGRAPH_LIBRARIES}
-        ${OPENAL_LIBRARY}
-        ${OPENGL_LIBRARY}
-        ${JPEG_LIBRARY})
+    if (MINGW)
+        target_link_libraries(SimGearScene
+            SimGearCore
+            ${ZLIB_LIBRARY}
+            ${OPENSCENEGRAPH_LIBRARIES}
+            ${OPENAL_LIBRARIES}
+            ${OPENGL_LIBRARY}
+            ${JPEG_LIBRARY})
+    else()
+        target_link_libraries(SimGearScene
+            SimGearCore
+            ${ZLIB_LIBRARY}
+            ${OPENSCENEGRAPH_LIBRARIES}
+            ${OPENAL_LIBRARY}
+            ${OPENGL_LIBRARY}
+            ${JPEG_LIBRARY})
+    endif(MINGW)
 endif()
 
 if(ENABLE_RTI)

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Sat, 4 Jun 2016 12:59:53 -0500
Subject: [PATCH] Reorder OSG libraries as a quick hack for static linking.


diff --git a/CMakeLists.txt b/CMakeLists.txt
index 1111111..2222222 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -210,7 +210,7 @@ else()
         message(STATUS "Sound support: ENABLED")
     endif(ENABLE_SOUND)
 
-    find_package(OpenSceneGraph 3.2.0 REQUIRED osgText osgSim osgDB osgParticle osgGA osgViewer osgUtil)
+    find_package(OpenSceneGraph 3.2.0 REQUIRED osgText osgSim osgParticle osgViewer osgGA osgDB osgUtil)
 endif(SIMGEAR_HEADLESS)
 
 find_package(ZLIB REQUIRED)

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Sun, 5 Jun 2016 10:11:21 -0500
Subject: [PATCH] Fix CMake shared build for MinGW.


diff --git a/simgear/CMakeLists.txt b/simgear/CMakeLists.txt
index 1111111..2222222 100644
--- a/simgear/CMakeLists.txt
+++ b/simgear/CMakeLists.txt
@@ -56,8 +56,9 @@ if(SIMGEAR_SHARED)
     set_property(TARGET SimGearCore PROPERTY SOVERSION ${SIMGEAR_SOVERSION})
     install(TARGETS SimGearCore
             EXPORT SimGearTargets
-            LIBRARY DESTINATION
-            ${CMAKE_INSTALL_LIBDIR})
+            LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+            RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+            ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
     if(NOT SIMGEAR_HEADLESS)
         add_library(SimGearScene SHARED ${sceneSources})
@@ -68,8 +69,9 @@ if(SIMGEAR_SHARED)
         # EXPORT SimGearSceneConfig
         install(TARGETS SimGearScene
                 EXPORT SimGearTargets
-                LIBRARY
-                DESTINATION ${CMAKE_INSTALL_LIBDIR} )
+                LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
+                RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
+                ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} )
     endif()
 
 else()

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Saikrishna Arcot <saiarcot895@gmail.com>
Date: Sun, 5 Jun 2016 10:32:11 -0500
Subject: [PATCH] Add winsock library dependency.


diff --git a/simgear/CMakeLists.txt b/simgear/CMakeLists.txt
index 1111111..2222222 100644
--- a/simgear/CMakeLists.txt
+++ b/simgear/CMakeLists.txt
@@ -133,6 +133,7 @@ target_link_libraries(SimGearCore
     ${EXPAT_LIBRARIES}
     ${CMAKE_THREAD_LIBS_INIT}
     ${COCOA_LIBRARY}
+    ${WINSOCK_LIBRARY}
     ${CURL_LIBRARIES})
 
 if(NOT SIMGEAR_HEADLESS)
